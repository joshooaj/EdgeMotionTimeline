//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EdgeMotionTimeline.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("EdgeMotionTimeline.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 49345c58-1122-42c8-8673-b064fbc1fd34.
        /// </summary>
        internal static string BackgroundTimelineSequenceSourceId {
            get {
                return ResourceManager.GetString("BackgroundTimelineSequenceSourceId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Edge motion.
        /// </summary>
        internal static string BackgroundTimelineSourceTitle {
            get {
                return ResourceManager.GetString("BackgroundTimelineSourceTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 4acc619d-bcb3-42a8-aff9-a5c6d9eafad4.
        /// </summary>
        internal static string CustomTimelineBackgroundPluginId {
            get {
                return ResourceManager.GetString("CustomTimelineBackgroundPluginId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Custom timeline sequence.
        /// </summary>
        internal static string CustomTimelineSequenceSourceTitle {
            get {
                return ResourceManager.GetString("CustomTimelineSequenceSourceTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap DummyItem {
            get {
                object obj = ResourceManager.GetObject("DummyItem", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Milestone Systems.
        /// </summary>
        internal static string Manufacturer {
            get {
                return ResourceManager.GetString("Manufacturer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ba1c05ce-a078-4eaf-8d1e-c212ad6b3585.
        /// </summary>
        internal static string PluginId {
            get {
                return ResourceManager.GetString("PluginId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Custom Timeline.
        /// </summary>
        internal static string PluginName {
            get {
                return ResourceManager.GetString("PluginName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap Server {
            get {
                object obj = ResourceManager.GetObject("Server", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap WorkSpaceIcon {
            get {
                object obj = ResourceManager.GetObject("WorkSpaceIcon", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
    }
}
